# TODO: Potentially switch to cargo_xtask for easy re-targetting, i.e:
# https://github.com/card-io-ecg/card-io-fw/blob/main/Cargo.toml

[package]
name = "ssh-stamp"
version = "0.1.0"
authors = ["Roman Valls Guimera <brainstorm@nopcode.org>"]
edition = "2021"
license = "MIT OR Apache-2.0"

[dependencies]
cfg-if = "1.0.0"
ed25519-dalek = { version = "2", default-features = false }
embassy-executor = { version = "0.7"}
embassy-net = { version = "0.6", features = ["tcp", "udp", "dhcpv4", "medium-ethernet"] }
smoltcp = { version = "0.12", default-features = false, features = ["medium-ethernet", "socket-raw"]}
embassy-time = { version = "0.4" }
embedded-io-async = "0.6.0"
esp-alloc = "0.7"
esp-backtrace = { version = "0.15", features = [
    "exception-handler",
    "panic-handler",
    "println",
] }
esp-hal = { version = "1.0.0-beta.0", features = [ "unstable" ] }
esp-hal-embassy = { version = "0.7"}
esp-println = { version = "0.13", features = ["log"] }
esp-wifi = { version = "0.13", features = ["wifi", "esp-alloc"] }
hex = { version = "0.4", default-features = false }
log = { version = "0.4" }
static_cell = { version = "2", features = ["nightly"] }
ssh-key = { version = "0.6", default-features = false, features = ["ed25519"] }
sunset = { version = "0.2.0", git="https://github.com/mkj/sunset", default-features = false, features = ["openssh-key", "embedded-io"]}
sunset-embassy = { version = "0.2.0", git = "https://github.com/mkj/sunset", default-features = false}
getrandom = { version = "0.2.10", features = ["custom"] }
embassy-sync = "0.6"
heapless = "0.8"
embassy-futures = "0.1"
edge-dhcp = "0.5"
edge-nal = "0.5"
edge-nal-embassy = "0.5"

[profile.dev]
# Rust debug is too slow.
# For debug builds always builds with some optimization
opt-level = 3

[profile.release]
codegen-units = 1 # LLVM can perform better optimizations using a single thread
debug = 2
debug-assertions = false
incremental = false
lto = 'fat'
opt-level = 3
overflow-checks = false

[profile.esp32s2]
inherits = "release"
opt-level = "s"  # Optimize for size.


[features]

# MCU options
esp32 = [
    "esp-hal/esp32",
    "esp-backtrace/esp32",
    "esp-wifi/esp32",
    "esp-hal-embassy/esp32",
    "esp-println/esp32",
    "embassy-executor/task-arena-size-40960",
]
esp32c2 = [
    "esp-hal/esp32c2",
    "esp-backtrace/esp32c2",
    "esp-wifi/esp32c2",
    "esp-hal-embassy/esp32c2",
    "esp-println/esp32c2",
    "embassy-executor/task-arena-size-40960",
]
esp32c3 = [
    "esp-hal/esp32c3",
    "esp-backtrace/esp32c3",
    "esp-wifi/esp32c3",
    "esp-hal-embassy/esp32c3",
    "esp-println/esp32c3",
    "embassy-executor/task-arena-size-40960",
]
#esp32c5 = [
#    "esp-hal/esp32c5",
#    "esp-backtrace/esp32c5",
#    "esp-wifi/esp32c5",
#    "esp-hal-embassy/esp32c5",
#    "esp-println/esp32c5",
#    "embassy-executor/task-arena-size-40960",
#]
esp32c6 = [
    "esp-hal/esp32c6",
    "esp-backtrace/esp32c6",
    "esp-wifi/esp32c6",
    "esp-hal-embassy/esp32c6",
    "esp-println/esp32c6",
    "embassy-executor/task-arena-size-40960",
]
esp32s2 = [
    "esp-hal/esp32s2",
    "esp-backtrace/esp32s2",
    "esp-wifi/esp32s2",
    "esp-hal-embassy/esp32s2",
    "esp-println/esp32s2",
    "embassy-executor/task-arena-size-32768",
]
esp32s3 = [
    "esp-hal/esp32s3",
    "esp-backtrace/esp32s3",
    "esp-wifi/esp32s3",
    "esp-hal-embassy/esp32s3",
    "esp-println/esp32s3",
    "embassy-executor/task-arena-size-40960",
]
